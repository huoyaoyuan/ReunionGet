# NET Core
# Build and test NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
  batch: true
  branches:
    include:
    - '*'

pr: 
- master

jobs:
  - job: 'BuildWaringAsError'

    pool:
      vmImage: 'windows-latest'

    variables:
      solution: 'ReunionGet.sln'
      buildConfiguration: 'Release'

    steps:
    - task: UseDotNet@2
      displayName: 'Install .NET SDK'
      inputs:
        packageType: 'sdk'
        useGlobalJson: true

    - task: DotNetCoreCLI@2
      displayName: 'Restore'
      inputs:
        command: 'restore'
        projects: '$(solution)'
        feedsToUse: 'select'

    - task: DotNetCoreCLI@2
      displayName: 'Build'
      inputs:
        command: 'build'
        projects: '$(solution)'
        arguments: '--configuration $(buildConfiguration) -warnAsError'

  - job: 'Test'

    strategy:
      matrix:
        Windows:
          imageName: 'windows-latest'
          projects: |
            **/*.*proj
        Linux:
          imageName: 'ubuntu-latest'
          projects: |
            Source/Portable/**/*.*proj
            Test/**/*.*proj

    pool:
      vmImage: '$(imageName)'

    variables:
      buildConfiguration: 'Release'

    steps:
    - task: UseDotNet@2
      displayName: 'Install .NET SDK'
      inputs:
        packageType: 'sdk'
        useGlobalJson: true

    - task: DotNetCoreCLI@2
      displayName: 'Restore'
      inputs:
        command: 'restore'
        projects: '$(projects)'
        feedsToUse: 'select'

    - task: DotNetCoreCLI@2
      displayName: 'Build'
      inputs:
        command: 'build'
        projects: '$(projects)'
        arguments: '--configuration $(buildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: 'Pack'
      inputs:
        command: 'pack'
        packagesToPack: '$(projects)'
        nobuild: true
        versioningScheme: 'off'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifacts'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

    - task: DotNetCoreCLI@2
      displayName: 'Test'
      inputs:
        command: 'test'
        projects: '$(projects)'
        arguments: '--configuration $(buildConfiguration)'
